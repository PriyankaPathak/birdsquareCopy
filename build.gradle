version = '1.0'

apply plugin: 'jetty'
apply plugin: 'idea'

defaultTasks 'clean', 'idea', 'setupDB', 'build'


apply from:"https://raw.github.com/breskeby/gradleplugins/master/emmaPlugin/emma.gradle"



repositories {
    mavenCentral()
}


dependencies {
    compile "org.springframework:spring-core:+"
    compile "org.springframework:spring-webmvc:+"
    compile "javax.servlet:javax.servlet-api:+"
    compile "org.springframework:spring-context:+"
    compile "org.freemarker:freemarker:2.3.19"
    compile "org.hibernate:hibernate:+"
    compile "org.hibernate:hibernate-core:+"
    compile "org.slf4j:slf4j-api:1.5.8"
    compile "mysql:mysql-connector-java:5.1.16"
    compile "org.springframework:spring-tx:3.0.1.RELEASE"
    compile "org.springframework:spring-jdbc:3.1.2.RELEASE"
    compile "org.springframework:spring-beans:3.1.2.RELEASE"
    compile "org.hibernate:hibernate-entitymanager:4.1.7.Final"
    compile "org.springframework:spring-orm:3.1.2.RELEASE"

    compile "org.json:json:20090211"

    emma "emma:emma:2.0.5312"
    emma "emma:emma_ant:2.0.5312"


    compile "org.springframework.social:spring-social-core:1.0.2.RELEASE"
    compile "org.springframework.social:spring-social-web:1.0.2.RELEASE"
    compile "org.springframework.social:spring-social-facebook:1.0.2.RELEASE"
    compile 'commons-httpclient:commons-httpclient:3.1'
    compile 'com.google.code.facebookapi:facebook-java-api:+'


    testCompile "org.springframework:spring-test:+"
    testCompile "junit:junit:+"
//    testCompile "javax.inject:javax.inject-tck:+"
    testCompile "org.mockito:mockito-core:1.9.0-rc1"
    testCompile "org.seleniumhq.selenium:selenium-support:2.25.0"
    testCompile "org.seleniumhq.selenium:selenium-firefox-driver:2.25.0"
    testCompile "org.seleniumhq.selenium:selenium-htmlunit-driver:2.25.0"
}

jettyRun.contextPath = ''

task compile(dependsOn: compileJava)
task testCompile(dependsOn: compileTestJava)

task getJars(type:Copy, dependsOn:[compile, compileTestJava]) { into 'lib' from configurations.compile, configurations.testCompile }

task intellijLibs(dependsOn: getJars) {
    description = 'get jar to lib for intelliJ to recreate'
    outputs.dir 'lib'
}

task setupDB(type:Exec) {
    commandLine 'sh', 'scripts/setup_db.sh'
}

test.doFirst {
    [jettyRun, jettyRunWar]*.daemon = true
    tasks.jettyRun.execute()
}

test.doLast {
    jettyStop.stopPort = 8080
    jettyStop.stopKey = 'stopKey'
    tasks.jettyStop.execute()
}


